server:
  port: 50053
  mode: "development"
  tls:
    enabled: false
    cert_file: "<path-to-your-server-cert.pem>"
    key_file: "<path-to-your-server-key.pem>"
    client_ca_file: "<path-to-your-ca-cert.pem>"
    client_auth: "" # Options: NoClientCert, RequestClientCert, RequireAnyClientCert, VerifyClientCertIfGiven, RequireAndVerifyClientCert

persistence:
  type: "neondb" # Supported types: neondb, cockroachdb, s3
  database:
    connection:
      max_conns: 25
      min_conns: 5
      max_conn_lifetime: 1h
      max_conn_idle_time: 5m
      health_check_period: 1m
    tls:
      enabled: false
      ssl_mode: "disable" # e.g., disable, require, verify-ca, verify-full

aws:
  enabled: false # Set to true to use AWS services (S3, KMS)
  region: "us-east-1"
  s3_bucket: "<your-s3-bucket-for-s3-persistence>"
  kms_key_arn: "<your-kms-key-arn-for-aws-kms-provider>"

# Path to the file containing client credentials (ID, hashed secret, permissions).
client_credentials_path: "configs/dev_client/config.client.dev.yaml"

# Default KMS provider to use for operations that don't have a specific tier-based provider.
default_kms_provider: "local" # Options: local, aws

authorization:
  roles:
    admin:
      allowed_operations: ["*"]
    premium_user:
      allowed_operations:
        - "create_key"
        - "get_key"
        - "list_keys"
        - "rotate_key"
    free_user:
      allowed_operations:
        - "create_key"
        - "get_key"
  zero_trust:
    enforce_mtls_identity_match: true